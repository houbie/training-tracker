[project]
name = "training-tracker"
version = "1.0.0"
description = "API for tracking training sessions"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.119",
    "uvicorn[standard]>=0.38",
    "pydantic>=2.12",
    "python-dateutil>=2.9",
]

[dependency-groups]
dev = [
    "requests>=2.32",
    "pytest>=8.4",
    "httpx>=0.28",
]

[project.scripts]
training-tracker = "training_tracker.main:main"

[build-system]
requires = ["uv_build>=0.9.5,<0.10.0"]
build-backend = "uv_build"

[tool.hatch.build.targets.wheel]
packages = ["src/training_tracker"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 120
[tool.ruff.lint]
fixable= ["ALL"]
select = ["E", "F", "I", "N", "W"]
ignore = ["N803", "N815"]


[tool.pyprojectx.main]
requirements = ["uv", "ruff", "pre-commit", "px-utils", "mypy", "datamodel-code-generator"]
post-install = "pre-commit install"

[tool.pyprojectx.aliases]
install = "uv sync"
update = ["uv lock --upgrade", "@install"]
outdated = "uv pip list --outdated"
run = "uv run"
start = "uv run training-tracker"

test = "@run pytest"
format = ["ruff format", "ruff check --select I --fix"]
check-mypy = "mypy --no-incremental --python-executable .venv/bin/python src"
lint = "ruff check src tests"
fix-ruff = "@lint --fix"

build = ["@install", "@lint", "@check-mypy", "@test"]

clean = "pxrm .venv build generated dist .coverage .mypy_cache .pytest_cache .ruff_cache"
